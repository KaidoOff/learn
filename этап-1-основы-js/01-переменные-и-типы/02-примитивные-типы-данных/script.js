/* ТИПЫ ДАННЫХ

В JS есть 7 примитивных типов данных:

*/

// number - представляет числа (как целые так и с плавающей точкой)

let number = 100; // целое число
let float = 12.99 // число с плавающей точкой

/* 

Этот тип данных имеет специальные значения

NaN - специальное значения которое буквально означает "не число".
Появляется когда результат математической операции не имеет смысла. 

например:

*/

let value1, value2, result;

result = value1 / value2;

console.log(result) // результат равен NaN, так как переменные уравнения не имеют значения.

/* 

Infinity и -Infinity - это положительная или отрицательная бесконечность. Это значение возникает когда число выходит 
за пределы максимально возможного значения или при делении на ноль.

*/

value1 = -1;
value2 = 0;

result = value1 / value2;

console.log(result) // -Infinity, так как значение отрицательное -1 было поделено на 0 (противоположный результат будет для положительного числа)


// string - строка.

let welcome = "Hello"; // обычный способ записи строки
let name = 'Andrey'; // такой же обычный способ записи строки, разница только в стиле написания кода.

let str = `${welcome}, \n${name}!`; // шаблоные строки 

/* 

Шаблоные строки - мощный инструмент, который позволяет:

1. Многострочность без использования \n и табуляцию без \t, сохраняет оригинальный вид

let str = `Привет,
мир`

Результат будет точно такой.

2. Вставка переменных и выражений с помощью ${}

например

let str = `${value}`
let str = `${value1 + value2}`

*/

console.log(str)

// boolean - логический тип. Поддерживает true или false

let isActive = true;
isActive = false;

/* Чаще всего используется для сравнения или условного выражения */

let age = 18, isAdult;
isAdult = age > 10;

console.log(isAdult); // равен true, так как 18 > 10 ( и наоборот )

// null - специальное значение которое означает "пусто", "пока нет данных"

let userName = null; // нет данных

// undefined - значение неинициализированной переменной. Переменной у которой не записано какое либо значение

let x;
console.log(x) // undefined

// bigInt - для сверхбольших ЦЕЛЫХ чисел, которое обходит ограничение JS 2^53 типа number. Для записи значения нужно добавлять 
// для числа больше 2^53 символ "n" в конце значения 9007199254740994n

console.log(x = 9007199254740994n + 12n)

// symbol - это уникальный и неизменяемый примитив. Каждый Symbol() создаёт уникальный идентификатор

const id = Symbol("id");
const obj = {
    [id]: 123
};

console.log(obj)